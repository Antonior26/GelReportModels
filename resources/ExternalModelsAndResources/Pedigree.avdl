@namespace("Gel_BioInf_Models")
/**
This protocol defines the Participants and Pedigree
*/
protocol RDPedigree {

/**
This is quite GEL specific. This is the way is stored in ModelCatalogue and PanelApp.
Currently all specific disease titles are assigned to a disease subgroup so really only specificDisease needs to be
completed but we add the others for generality
*/
enum Sex {male, female, undetermined}


enum TernaryOption {yes, no, unknown}


record ConsentStatus {

    /**
    Is this individual consented to the programme?
    It could simple be a family member that is not consented but for whom affection status is known
    False by default! needs to be explicitly changed
    */


    boolean programmeConsent=false;

    /**
    Consent for feedback of primary findings?
    False by default
    */
    boolean primaryFindingConsent=false;

    /**
    Consent for secondary finding lookup
    False by default
    */
    boolean secondaryFindingConsent=false;

    /**
    Consent for carrier status check?
    False by default
    */
    boolean carrierStatusConsent=false;
}


record Disorder {
    /**
    This is Level2 Title for this disorder
    */
    union {null,string} diseaseGroup;

    /**
    This is Level3 Title for this disorder
    */
    union {null,string} diseaseSubGroup;

    /**
    This is Level4 Title for this disorder
    */
    union {null,string} specificDisease;

    /**
    Age of onset in months
    */
    union {null, int} ageOfOnset;
}


/**
This defines an HPO term and its modifiers (possibly multiple)
If HPO term presence is unknown we don't have a entry on the list
*/
record HpoTerm {
    /**
    Identifier of the HPO term
    */
    string term;

    boolean termPresent;

    /**
    Modifier associated with the HPO term
    */
    union {null, array<string>} modifiers;

    /**
    Age of onset in months
    */
    union {null, int} ageOfOnset;


}


/**
Definitions of enumeration used in RDParticipant
*/
enum AffectionStatus {unaffected, affected,  unknown}

enum LifeStatus {alive, aborted, deceased, unborn, stillborn, miscarriage}

/**
Default is not_adopted
adoptedin means adopted into the family
adoptedout means child belonged to the family and was adopted out
*/
enum AdoptedStatus {not_adopted, adoptedin, adoptedout}


/**
This defines a pedigree member
*/
record PedigreeMember {

    int pedigreeId;  //Numbering used to refer to each member of the pedigree
    union {null, string} gelId;  //gel internal identifier, only required when the participant belongs to the program
    union {null, string} firstName; //Only required when the participant belongs to the program
    union {null, string} surname; //Only required when the participant belongs to the program
    union {null, string} NHSNumber; //Only required when the participant belongs to the program
    union {null, string} dateBirth; //Only required when the participant belongs to the program
    union {null, array<string>} externalIds; //other potential ids for individuals e.g, Hospital id

    Sex sex;

    /**
    Id of the parent, if unknown then no parent is referenced. Parents may need to be entered even if no data is known
    about them in order to unambiguously reconstruct the pedigree.
    */
    union {null, string}  fatherId; //refers to the pedigreeId of the father
    union {null, string}  motherId; //refers to the pedigreeId of the mother

    /**
    Each twin group is numbered, i.e. all members of a group of multiparous births receive the same number
    */
    union {null, int} twinGroup;
    union {null, TernaryOption} monozygotic; //a property of the twinning group but should be entered for all members


    AdoptedStatus adoptedStatus;

    LifeStatus lifeStatus;

    TernaryOption consanguineousParents;

    AffectionStatus affectionStatus;

    /**
    Clinical Data (disorders). If the family member is unaffected as per affectionStatus then this list is empty
    */
    array<Disorder> disorderList;

    /**
    Clinical Data (HPO terms).
    */
    array<HpoTerm> hpoTermList;


    /**
    Version of the Data Catalogue against which the information is being provided
    The data catalogue version should internally keep track of the version for the HPO ontology
    */
    string dataModelCatalogueVersion="v4.2";

    union {null, map<string>} additionalInformation;
}


/**
This is the concept of a family with associated phenotypes as present in the record RDParticipant
*/
record Pedigree {

    string gelFamilyId;  //gel family id

    array <PedigreeMember> pedigreeMembers; //priority 1

}

}
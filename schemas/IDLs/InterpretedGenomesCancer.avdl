@namespace("Gel_BioInf_Models")

/**
Define the Report used by GEL to get the clinical interpretation companies results for bronze level

TODO: Previously removed penetrance for cancer interpreted genomes cancer, should this be re-added for cancer??
TODO: Add to ReportedVariant and ReportedStructuralVariant whether these are somatics or germline findings
TODO: Indicated whether sample source for somatic findings
TODO: ADD variant and gene specific pharmacogenic information e.g. metaboliser status and drug response targets
*/
protocol InterpretedGenomesCancer {

/**
This is intended to hold the genotypes for the family members
In principle it is a phased zygosity as in VCF spec and called by the analysis provider if further phasing is conducted
*/

record CalledGenotypes {
    /**
    TODO: EIK added field for allele fraction  - ARM to check
    */
    /**
    Participant id of the family member
    */
    /**
    TODO: EIK changed partipantId to Sample ID to reflect tumour normal
    */
    string sampleId;

    /**
    Zygosity as per VCF spec possibility phased such as 0|1, 1|0 for phased or 0/1 for unphased
    */
    string genotype;

    float alleleFraction

    /**
    Copy number genotype for imprecise events
    */
    union {null, int} copyNumber;

}

record Gene {
    /**
    HGMD symbol
    */
    string symbol;

    /**
    Transcript used, this should be a transcript ID from Ensembl, (i.e, ENST00000544455)
    */
    string transcriptId;


    /**
    Others IDs
    */
    map<string> ids;

    /**
    Exome size
    */
    union {null, int} exomeSize;

    /**
    This is the gene coverage calculated for all genes in the Gene Panel. This is the coverage (% bases covered > 15x)
    */
    union {null, double} geneCoverage;

}

/**
This is the classification of the variant according to standard practice guidelines (e.g. ACMG)
*/
enum VariantClassification {BENIGN, LIKELY_BENIGN, VUS, LIKELY_PATHOGENIC, PATHOGENIC}

/**
Possible tiers as defined by Genomics England/ or Impact  - it is unlikely that tiers will be used for cancer, since these are gene specific, however impact classes as used to define the tiers may be */

*/
enum Tier {NONE, TIER1, TIER2, TIER3}

record ReportEvents {

    /**
    This is the description of the model of inheritance, (now it's free text, in next version should be an enumeration)
    */
    union {null, string} modeOfInheritance;

    /**
    This is the gene of interest for this reported variant, please note that one variant can overlap more that one gene
    If more than one gene is considered interesting for this particular variant, should be reported in two different
    ReportEvents
    TODO: Add transcript
    */
    Gene gene;

    /**
    This is the score provided by the company to reflect a variant's likelihood of explaining the phenotype using
    a specific mode of Inheritance
    */
    float score;

    /**
    This variant using this mode of inheritance can  fully explain the phenotype? true or false
    */
    union {null, boolean} fullyExplainsPhenotype;

    /**
    This value groups variants that together could explain the phenotype according to the
    mode of inheritance used. All the variants sharing the same value will be considered in the same group.
    This value is an integer unique in the whole analysis.
    */
    union {null, int} groupOfVariants;

    /**
    This is the description of why this variant would be reported, for example that it affects the protein in this way
    and that this gene has been implicated in this disorder in these publications. Publications should be provided as PMIDs
    using the format [PMID:8075643]. Other sources can be used in the same manner, e.g. [OMIM:163500]. Brackets need to be included.
    */
    string variantJustification;

    union {null, Tier} tier;
}

/** this defines whether the variant reported is considered to be a somatic or germline finding.
*/

enum SomaticOrGermline {unknown, somatic, germline}

record ReportedVariants {

    /**
    chromosome, named as: 1-22,X,Y,MT(other contigs name)
    */
    string chromosome;

    /**
    variant ID in dbSNP
    */
    string dbSNPid;

    /**
    position: Position 1-based
    */
    int position;

    /**
    reference: Reference Allele sequence, the same provided in vcf
    */
    string reference;

    /**
    alternate: Alternate Allele sequence, the same provided in vcf
    */
    string alternate;


    /**
    This is the overall score provided by the company to reflect a variant's likelihood of explaining the phenotype
    This score may be missing if the company does not calculate such a score. In principle this score should summarise
    other scores for example across multiple modes of inheritance.
    TODO: Think about this!!!
    */


    array<ReportEvents> reportEvents;

    array<CalledGenotypes> calledGenotypes;

    union {null, float} internalScore;

    union {null, VariantClassification} variantClassification;

    /**
    For example HGMD ID)
    */
    union {null,map<string>} additionalTextualVariantAnnotations;

    /**
    For Example (Allele Frequency, sift, polyphen, mutationTaster, CADD. ..)
    */
    union {null, map<float>} additionalNumericVariantAnnotations;

    /**
    Comments
    */
    union {null, array<string>} comments;

    /** EIK added: This object defines where the variant type being reported is considered to a somatic or germline finding
    */

    SomaticOrGermline somaticOrGermline;

}



record ReportedStructuralVariants {

    /**
    chromosome, named as: 1-22,X,Y,MT(other contigs name)
    */
    string chromosome;

    /**
    start: start position 1-based
    */
    int start;

    /**
    end: end position 1-based
    */
    int end;

    /**
    The ID field indicates the type of structural variant, and can be a colon-separated list of types and subtypes
    (this is VCF Format): DEL, INS, DUP, INV, CNV, DUP:TANDEM, DEL:ME, INS:ME, INS:ME:ALU...
    */
    string type;

    /**
    reference: Reference Allele sequence, the same provided in vcf
    */
    string reference;

    /**
    alternate: Alternate Allele sequence, the same provided in vcf
    */
    string alternate;


    array<ReportEvents> ReportEvents;

    array<CalledGenotypes> calledGenotypes;

    /**
    This is the overall score provided by the company to reflect a variant's likelihood of explaining the phenotype
    This score may be missing if the company does not calculate such a score. In principle this score should summarise
    other scores for example across multiple modes of inheritance.
    */
    union {null, float} internalScore;

    union {null, VariantClassification} variantClassification;

    /**
    For example HGMD ID)
    */
    union {null,map<string>} additionalTextualVariantAnnotations;

    /**
    For Example (Allele Frequency, sift, polyphen, mutationTaster, CADD. ..)
    */
    union {null, map<float>} additionalNumericVariantAnnotations;

    /**
    Comments
    */
    union {null, array<string>} comments;

    /** EIK added: This object defines where the variant type being reported is considered to a somatic or germline finding
    */

    SomaticOrGermline somaticOrGermline;

}

/**
TODO: change InterpretationAnalysis > CancerInterpretationAnalysis
*/
record CancerInterpretationAnalysis {
    /** TODO: ARM To check ReportType
    */
    /**
    This is the ID of the clinical interpretation request
    */
    string reportRequestId;


    /** This object define the type of report being returned for the participant */

    ReportType reportType;

    /**
    This is the ID of the analysis carried out and is expected to be linked to the conditions and parameters
    used to produce the clinical interpretation over this group of samples. It is critical to establish provenance.
    It is expected that this id can be used to retrieve an analysis in the decision support/ variant exploration tools
    */
    string analysisId;

    string companyName;

    string reportURI;

    array<ReportedVariants> reportedVariants;

    array<ReportedStructuralVariants> reportedStructuralVariants;

    /**
    Comments about the report
    */
    union {null, array<string>} comments;

}
}
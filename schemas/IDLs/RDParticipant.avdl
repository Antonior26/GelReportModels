@namespace("Gel_BioInf_Models")
/**
This protocol defines the Participants and Pedigree
*/
protocol RDPedigree {


/**
This is quite GEL specific. This is the way is stored in ModelCatalogue and PanelApp.
More generally one would like to have an omim or orphanet id here
Currently all specific disease titles are assigned to a disease subgroup so really only specificDisease needs to be
completed but we add the others for generality
*/

record Disorder {
    /**
    This is Level2 Title for this disorder
    */
    union {null,string} diseaseGroup;

    /**
    This is Level3 Title for this disorder
    */
    union {null,string} diseaseSubGroup;

    /**
    This is Level4 Title for this disorder
    */
    union {null,string} specificDisease;

    /**
    Age of onset in months
    */
    union {null, int} ageOfOnset;
}


/**
This defines an HPO term and its modifiers (possibly multiple)
*/
record HpoTerm {
    /**
    Identifier of the HPO term
    */
    string term;

    /**
    This is whether the term is present in the participant (default is null=unkown) true=term is present in participant,
    false=term is not present
    */
    union {null,boolean} termPresence;

    /**
    Modifier associated with the HPO term
    */
    union {null, array<string>} modifier;

    /**
    Age of onset in months
    */
    union {null, int} ageOfOnset;


}
/**
This is to distinguish into which part of the program the participant was consented to
*/
enum ProgramPhase {pilot, main}

record ConsentStatus {

    /**
    Is this individual consented to the programme?
    It could simple be a family member that is not consented but for whom affection status is known
    False by default! needs to be explicitly changed
    */


    ProgramPhase programPhase;

    boolean optOut=false;

    /** This is the consent date
    */
    string consentDate;

    union {null, string} consentVersion;


    /** OptOut of transfer to main phase, where secondary findings are mandatory */


    boolean programmeConsent=false;

    /**
    Consent for feedback of primary findings?
    False by default
    */
    boolean primaryFindingConsent=false;

    /**
    Consent for secondary finding lookup
    False by default
    */
    boolean secondaryFindingConsent=false;

    /**
    Consent for carrier status check?
    False by default
    */
    boolean carrierStatusConsent=false;
}


/**
Definitions of enumeration used in RDParticipant
*/
enum CarrierStatus {unaffected, affected, carrier, uncertain, presymptomatic}

enum LifeStatus {aborted, deceased, unborn, stillborn, miscarriage}

enum Sex {male, female, unknown}

/**
Default is not_adopted
adoptedin means adopted into the family
adoptedout means child belonged to the family and was adopted out
*/
enum AdoptedStatus {not_adopted, adoptedin, adoptedout}


/**
This defines a RD Participant (demographics and pedigree information)
*/
record RDParticipant {

    string id;  //priority 1

    /**
    Possible options: male, female, unknown
    */
    Sex sex; //priority 1

    /**
    Id of the parent, if unknown then no parent is referenced
    */
    union {null, string}  father; //priority 1

    union {null, string}  mother;  //priority 1

    string familyId;  //priority 1

    union {null, array<string>} externalIds; //priority 1

    /**
    Each twin group is numbered, i.e. all members of a group of multiparous births receive the same number
    */
    union {null, int} twinGroup; //priority 3

    /**
    True if they are monozygotic
    */
    union {null, boolean} monozygotic;  //priority 2


    union {null, AdoptedStatus} adoptedStatus; //priority 2

    /**
    see enum LifeStatus
    null (unknown) by default
    */
    union {null, LifeStatus} lifeStatus; //priority 1


    /**
    Offspring of a consanguineous relationship?
    TODO: this can become an enumeration with possible leveles of consanguinity, in this case it is only unknonwn (default), true or false.
    */

    union {null, boolean} consanguineousParents;  //priority 2

    /**
    Offspring from a consanguineous population
    */

    union {null, boolean} consanguineousPopulation;


    /**
    See enum CarrierStatus
    null (unknown) by default
    */
    union {null, CarrierStatus} carrierStatus; //priority 1


    /**
    Clinical Data (disorders)
    */
    array<Disorder> disorderList;  //priority 2

    /**
    Clinical Data (HPO terms)
    */
    array<HpoTerm> hpoTermList; //priority 2


    /**
    Version of the Data Catalogue against which the information is being provided
    The data catalogue version should internally keep track of the version for the HPO ontology
    */
    string dataModelCatalogueVersion="v4.2";  //priority 1

    /**
    What has this participant consented to?
    A participant that has been consented to the programme should also have sequence data associated with them; however
    this needs to be programmatically checked
    */
    ConsentStatus consentStatus;  //priority 2

    /**
    This is an array containing all the samples that belong to this individual, e.g ["LP00002255_GA4"]
    */
    union {null, array<string>} samples;

    /**
    We could add a map here to store additional information for example URIs to images, ECGs, etc
    Null by default
    */
    union {null, map<string>} additionalInformation;


}


/**
This is the concept of a family with associated phenotypes as present in the record RDParticipant
*/
record Pedigree {
    /**
    Family id which internally translate to a sample set
    */
    string familyId;     //priority 1

    array <RDParticipant> participants;  //priority 1

}

}
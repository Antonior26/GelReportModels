@namespace("Gel_BioInf_Models")
/**
This protocol defines the Participants and Pedigree
*/
protocol RDPedigree {

import idl "CommonRequest.avdl";
import idl "CommonParticipant.avdl";

/**
This is quite GEL specific. This is the way is stored in ModelCatalogue and PanelApp.
Currently all specific disease titles are assigned to a disease subgroup so really only specificDisease needs to be
completed but we add the others for generality
*/

record Disorder {
    /**
    This is Level2 Title for this disorder
    */
    union {null,string} diseaseGroup;

    /**
    This is Level3 Title for this disorder
    */
    union {null,string} diseaseSubGroup;

    /**
    This is Level4 Title for this disorder
    */
    union {null,string} specificDisease;

    /**
    Age of onset in months
    */
    union {null, int} ageOfOnset;
}


/**
This defines an HPO term and its modifiers (possibly multiple)
If HPO term presence is unknown we don't have a entry on the list
*/
record HpoTerm {
    /**
    Identifier of the HPO term
    */
    string term;

    /**
    This is whether the term is present in the participant (default is null=unkown) true=term is present in participant,
    false=term is not present
    */
    boolean termPresence;

    /**
    Modifier associated with the HPO term
    */
    union {null, array<string>} modifiers;

    /**
    Age of onset in months
    */
    union {null, int} ageOfOnset;


}


/**
Definitions of enumeration used in RDParticipant
*/
enum CarrierStatus {unaffected, affected, carrier, uncertain, presymptomatic}

enum LifeStatus {alive, aborted, deceased, unborn, stillborn, miscarriage}

/**
Default is not_adopted
adoptedin means adopted into the family
adoptedout means child belonged to the family and was adopted out
*/
enum AdoptedStatus {not_adopted, adoptedin, adoptedout}


/**
This defines a RD Participant (demographics and pedigree information)
*/
record RDParticipant {

    string id;  //gel internal identifier

    /**
    Possible options: male, female, unknown
    */
    Sex sex; //priority 1

    /**
    Id of the parent, if unknown then no parent is referenced
    */
    union {null, string}  father; //gel internal identifier father

    union {null, string}  mother;  //gel internal identifier mother

    string familyId;  /gel family id

    union {null, array<string>} externalIds; //should be hide for external companies

    /**
    Each twin group is numbered, i.e. all members of a group of multiparous births receive the same number
    */
    union {null, int} twinGroup;

    /**
    True if they are monozygotic
    */
    union {null, boolean} monozygotic; //null is unknown


    AdoptedStatus adoptedStatus=not_adopted;

    /**
    see enum LifeStatus
    null (unknown) by default
    */
    LifeStatus lifeStatus=alive;


    /**
    Offspring of a consanguineous relationship
    */

    union {null, boolean} consanguineousParents;

    /**
    Offspring from a consanguineous population
    */

    union {null, string} consanguineousPopulation;


    /**
    See enum CarrierStatus
    null (unknown) by default
    TODO: Think this again
    */
    union {null, CarrierStatus} carrierStatus;


    /**
    Clinical Data (disorders)
    */
    array<Disorder> disorderList;

    /**
    Clinical Data (HPO terms)
    */
    array<HpoTerm> hpoTermList;


    /**
    Version of the Data Catalogue against which the information is being provided
    The data catalogue version should internally keep track of the version for the HPO ontology
    */
    string dataModelCatalogueVersion="v4.2";

    /**
    What has this participant consented to?
    A participant that has been consented to the programme should also have sequence data associated with them; however
    this needs to be programmatically checked
    */
    ConsentStatus consentStatus;  //priority 2

    /**
    This is an array containing all the samples that belong to this individual, e.g ["LP00002255_GA4"]
    */
    union {null, array<string>} samples;


    /**
    No to be shared
    */
//    union {null, string} genomicMedicineCenter;
//    union {null, string} fullNameOfResponsibleConsultant; // TODO: we really need this??? (don't see the purpose)
//    union {null, string} contactNumber;
//    union {null, string} hospitalOfResponsibleConsultant;



    /**
    We could add a map here to store additional information for example URIs to images, ECGs, etc
    Null by default
    */
    union {null, map<string>} additionalInformation;

}


/**
This is the concept of a family with associated phenotypes as present in the record RDParticipant
*/
record Pedigree {
    /**
    Family id which internally translate to a sample set
    */
    string familyId;     //priority 1

    array <RDParticipant> participants;  //priority 1

}

}
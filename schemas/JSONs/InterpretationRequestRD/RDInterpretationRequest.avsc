{
  "type" : "record",
  "name" : "RDInterpretationRequest",
  "namespace" : "Gel_BioInf_Models",
  "doc" : "This record represents basic information for this report",
  "fields" : [ {
    "name" : "reportRequestId",
    "type" : "string",
    "doc" : "Unique id for this report"
  }, {
    "name" : "genomeAssemblyVersion",
    "type" : "string"
  }, {
    "name" : "reportVersion",
    "type" : "int",
    "doc" : "Version of this report"
  }, {
    "name" : "interpretGenome",
    "type" : "boolean",
    "doc" : "Simply load data to system or also provide interpretation?",
    "default" : false
  }, {
    "name" : "BAMs",
    "type" : {
      "type" : "array",
      "items" : {
        "type" : "record",
        "name" : "File",
        "doc" : "This defines a file\nThis Record is defined by the sampleID and a URI\nCurrently SampleID can be a single String or an array of strings if multiple samples are associated with the same file",
        "fields" : [ {
          "name" : "SampleId",
          "type" : [ "null", "string", {
            "type" : "array",
            "items" : "string"
          } ],
          "doc" : "Unique ID(s) of the Sample, for example in a multisample vcf this would have an array of all the smaple ids"
        }, {
          "name" : "URIFile",
          "type" : "string",
          "doc" : "URI PATH"
        } ]
      }
    },
    "doc" : "BAMs Files"
  }, {
    "name" : "gVCFs",
    "type" : {
      "type" : "array",
      "items" : "File"
    },
    "doc" : "gVCFs Files where SNVs and INDELs are represented"
  }, {
    "name" : "VCFs",
    "type" : {
      "type" : "array",
      "items" : "File"
    },
    "doc" : "VCFs Files where SVs and CNVs are represented"
  }, {
    "name" : "BigWigs",
    "type" : {
      "type" : "array",
      "items" : "File"
    },
    "doc" : "BigWig Files"
  }, {
    "name" : "annotationFile",
    "type" : [ "null", "File" ],
    "doc" : "This will be the output file from Cellbase + version used"
  }, {
    "name" : "rareDisease",
    "type" : {
      "type" : "record",
      "name" : "RareDisease",
      "fields" : [ {
        "name" : "recruitedDiseaseCategory",
        "type" : "string",
        "doc" : "EIK rename enrolledAgainstSpecificDiseaseTitle as recruitedDiseaseCategory"
      }, {
        "name" : "pedigree",
        "type" : {
          "type" : "record",
          "name" : "Pedigree",
          "doc" : "This is the concept of a family with associated phenotypes as present in the record RDParticipant",
          "fields" : [ {
            "name" : "familyId",
            "type" : "string",
            "doc" : "Family id which internally translate to a sample set"
          }, {
            "name" : "participants",
            "type" : {
              "type" : "array",
              "items" : {
                "type" : "record",
                "name" : "RDParticipant",
                "doc" : "This defines a RD Participant (demographics and pedigree information)",
                "fields" : [ {
                  "name" : "id",
                  "type" : "string"
                }, {
                  "name" : "sex",
                  "type" : {
                    "type" : "enum",
                    "name" : "Sex",
                    "symbols" : [ "male", "female", "unknown" ]
                  },
                  "doc" : "Possible options: male, female, unknown"
                }, {
                  "name" : "father",
                  "type" : [ "null", "string" ],
                  "doc" : "Id of the parent, if unknown then no parent is referenced"
                }, {
                  "name" : "mother",
                  "type" : [ "null", "string" ]
                }, {
                  "name" : "familyId",
                  "type" : "string"
                }, {
                  "name" : "externalIds",
                  "type" : [ "null", {
                    "type" : "array",
                    "items" : "string"
                  } ]
                }, {
                  "name" : "twinGroup",
                  "type" : [ "null", "int" ],
                  "doc" : "Each twin group is numbered, i.e. all members of a group of multiparous births receive the same number"
                }, {
                  "name" : "monozygotic",
                  "type" : [ "null", "boolean" ],
                  "doc" : "True if they are monozygotic"
                }, {
                  "name" : "adoptedStatus",
                  "type" : [ "null", {
                    "type" : "enum",
                    "name" : "AdoptedStatus",
                    "doc" : "Default is not_adopted\nadoptedin means adopted into the family\nadoptedout means child belonged to the family and was adopted out",
                    "symbols" : [ "not_adopted", "adoptedin", "adoptedout" ]
                  } ]
                }, {
                  "name" : "lifeStatus",
                  "type" : [ "null", {
                    "type" : "enum",
                    "name" : "LifeStatus",
                    "symbols" : [ "aborted", "deceased", "unborn", "stillborn", "miscarriage" ]
                  } ],
                  "doc" : "see enum LifeStatus\n    null (unknown) by default"
                }, {
                  "name" : "consanguineousParents",
                  "type" : [ "null", "boolean" ],
                  "doc" : "Offspring of a consanguineous relationship?\n    TODO: this can become an enumeration with possible leveles of consanguinity, in this case it is only unknonwn (default), true or false."
                }, {
                  "name" : "consanguineousPopulation",
                  "type" : [ "null", "string" ],
                  "doc" : "Offspring from a consanguineous population"
                }, {
                  "name" : "carrierStatus",
                  "type" : [ "null", {
                    "type" : "enum",
                    "name" : "CarrierStatus",
                    "doc" : "Definitions of enumeration used in RDParticipant",
                    "symbols" : [ "unaffected", "affected", "carrier", "uncertain", "presymptomatic" ]
                  } ],
                  "doc" : "See enum CarrierStatus\n    null (unknown) by default"
                }, {
                  "name" : "disorderList",
                  "type" : {
                    "type" : "array",
                    "items" : {
                      "type" : "record",
                      "name" : "Disorder",
                      "doc" : "This is quite GEL specific. This is the way is stored in ModelCatalogue and PanelApp.\nCurrently all specific disease titles are assigned to a disease subgroup so really only specificDisease needs to be\ncompleted but we add the others for generality",
                      "fields" : [ {
                        "name" : "diseaseGroup",
                        "type" : [ "null", "string" ],
                        "doc" : "This is Level2 Title for this disorder"
                      }, {
                        "name" : "diseaseSubGroup",
                        "type" : [ "null", "string" ],
                        "doc" : "This is Level3 Title for this disorder"
                      }, {
                        "name" : "specificDisease",
                        "type" : [ "null", "string" ],
                        "doc" : "This is Level4 Title for this disorder"
                      }, {
                        "name" : "ageOfOnset",
                        "type" : [ "null", "int" ],
                        "doc" : "Age of onset in months"
                      } ]
                    }
                  },
                  "doc" : "Clinical Data (disorders)"
                }, {
                  "name" : "hpoTermList",
                  "type" : {
                    "type" : "array",
                    "items" : {
                      "type" : "record",
                      "name" : "HpoTerm",
                      "doc" : "This defines an HPO term and its modifiers (possibly multiple)",
                      "fields" : [ {
                        "name" : "term",
                        "type" : "string",
                        "doc" : "Identifier of the HPO term"
                      }, {
                        "name" : "termPresence",
                        "type" : [ "null", "boolean" ],
                        "doc" : "This is whether the term is present in the participant (default is null=unkown) true=term is present in participant,\n    false=term is not present"
                      }, {
                        "name" : "modifiers",
                        "type" : [ "null", {
                          "type" : "array",
                          "items" : "string"
                        } ],
                        "doc" : "Modifier associated with the HPO term"
                      }, {
                        "name" : "ageOfOnset",
                        "type" : [ "null", "int" ],
                        "doc" : "Age of onset in months"
                      } ]
                    }
                  },
                  "doc" : "Clinical Data (HPO terms)"
                }, {
                  "name" : "dataModelCatalogueVersion",
                  "type" : "string",
                  "doc" : "Version of the Data Catalogue against which the information is being provided\n    The data catalogue version should internally keep track of the version for the HPO ontology",
                  "default" : "v4.2"
                }, {
                  "name" : "consentStatus",
                  "type" : {
                    "type" : "record",
                    "name" : "ConsentStatus",
                    "fields" : [ {
                      "name" : "programPhase",
                      "type" : {
                        "type" : "enum",
                        "name" : "ProgramPhase",
                        "doc" : "This is to distinguish into which part of the program the participant was consented to",
                        "symbols" : [ "pilot", "main" ]
                      },
                      "doc" : "Is this individual consented to the programme?\n    It could simple be a family member that is not consented but for whom affection status is known\n    False by default! needs to be explicitly changed"
                    }, {
                      "name" : "pilotToMainOptOut",
                      "type" : "boolean",
                      "default" : false
                    }, {
                      "name" : "consentDate",
                      "type" : "string",
                      "doc" : "This is the consent date"
                    }, {
                      "name" : "consentVersion",
                      "type" : [ "null", "string" ]
                    }, {
                      "name" : "programmeConsent",
                      "type" : "boolean",
                      "doc" : "OptOut of transfer to main phase, where secondary findings are mandatory",
                      "default" : false
                    }, {
                      "name" : "primaryFindingConsent",
                      "type" : "boolean",
                      "doc" : "Consent for feedback of primary findings?\n    False by default",
                      "default" : false
                    }, {
                      "name" : "secondaryFindingConsent",
                      "type" : "boolean",
                      "doc" : "Consent for secondary finding lookup\n    False by default",
                      "default" : false
                    }, {
                      "name" : "carrierStatusConsent",
                      "type" : "boolean",
                      "doc" : "Consent for carrier status check?\n    False by default",
                      "default" : false
                    } ]
                  },
                  "doc" : "What has this participant consented to?\n    A participant that has been consented to the programme should also have sequence data associated with them; however\n    this needs to be programmatically checked"
                }, {
                  "name" : "samples",
                  "type" : [ "null", {
                    "type" : "array",
                    "items" : "string"
                  } ],
                  "doc" : "This is an array containing all the samples that belong to this individual, e.g [\"LP00002255_GA4\"]"
                }, {
                  "name" : "genomicMedicineCentre",
                  "type" : [ "null", "string" ]
                }, {
                  "name" : "fullNameOfResponsibleConsultant",
                  "type" : [ "null", "string" ]
                }, {
                  "name" : "contactNumber",
                  "type" : [ "null", "string" ]
                }, {
                  "name" : "hospitalOfResponsibleConsultant",
                  "type" : [ "null", "string" ]
                }, {
                  "name" : "additionalInformation",
                  "type" : [ "null", {
                    "type" : "map",
                    "values" : "string"
                  } ],
                  "doc" : "We could add a map here to store additional information for example URIs to images, ECGs, etc\n    Null by default"
                } ]
              }
            }
          } ]
        }
      }, {
        "name" : "inbreedingCoefficientEstimates",
        "type" : [ "null", "File" ],
        "doc" : "TODO: create a record for inbreeding coefficients"
      }, {
        "name" : "ancestries",
        "type" : [ "null", {
          "type" : "array",
          "items" : "string"
        } ],
        "doc" : "TODO: define enumeration for ancestries"
      }, {
        "name" : "complexGeneticPhenomena",
        "type" : [ "null", "string" ],
        "doc" : "Hints about potential genetic phenomena that can inform interpretation\n    Proposed values:\n    MOSAICISM,\n    MONOSOMY,\n    DISOMY,\n    UNIPARENTAL_DISOMY,\n    TRISOMY,\n    OTHER_ANEUPLOIDY"
      }, {
        "name" : "modeOfInheritance",
        "type" : {
          "type" : "array",
          "items" : "string"
        },
        "doc" : "Proposed values:\n    MONOALLELIC, autosomal or pseudoautosomal, NOT imprinted|\n    MONOALLELIC, autosomal or pseudoautosomal, maternally imprinted (paternal allele expressed)|HP:0012275\n    MONOALLELIC, autosomal or pseudoautosomal, paternally imprinted (maternal allele expressed)|HP:0012274\n    MONOALLELIC, autosomal or pseudoautosomal, imprinted status unknown|HP:0000006\n    BIALLELIC, autosomal or pseudoautosomal|HP:0000007\n    BOTH monoallelic and biallelic, autosomal or pseudoautosomal|\n    BOTH monoallelic and biallelic (but BIALLELIC mutations cause a more SEVERE disease form), autosomal or pseudoautosomal|\n    MITOCHONDRIAL|HP:0001427\n    X-LINKED: hemizygous mutation in males, biallelic mutations in females|HP:0001419\n    X-LINKED: hemizygous mutation in males, may be caused by monoallelic mutations in females|HP:0001417\n    Unknown|\n\n    The entries in the variable will reflect combinations of allelic states consistent with the enumeration in the model catalogue:\n    recessive: Multiplex family: recessive pattern (affected siblings only)\n    simplex: Simplex (isolated) case\n    unknown: Multiplex family: unknown\n    xlinked: Multiplex family: pattern suggestive of X-linked inheritance\n    multigenerationalPaternal: Multiplex family - paternal multi-generational pattern of inheritance (likely dominant)\n    mitochondrial: Multiplex family: pattern suggestive of mitochondrial inheritance\n    multigenerationalMaternal: Multiplex family - maternal multi-generational pattern of inheritance (likely dominant)"
      }, {
        "name" : "virtualPanel",
        "type" : [ "null", {
          "type" : "record",
          "name" : "VirtualPanel",
          "doc" : "This record defines a gene panel.",
          "fields" : [ {
            "name" : "specificDiseaseTitle",
            "type" : "string"
          }, {
            "name" : "panelVersion",
            "type" : "string"
          }, {
            "name" : "ensemblVersion",
            "type" : "string"
          }, {
            "name" : "dataModelCatalogueVersion",
            "type" : "string",
            "doc" : "Version of the Data Catalogue against which the information is being provided\n    The data catalogue version should internally keep track of the version for the HPO ontology"
          }, {
            "name" : "geneIds",
            "type" : [ "null", {
              "type" : "array",
              "items" : "string"
            } ],
            "doc" : "gene id from ensembl (version as per annotation file)"
          }, {
            "name" : "Transcripts",
            "type" : [ "null", {
              "type" : "array",
              "items" : "string"
            } ],
            "doc" : "transcript ids from ensembl"
          }, {
            "name" : "relevantRegions",
            "type" : [ "null", "File" ],
            "doc" : "BED format file"
          }, {
            "name" : "clinicalRelevantVariants",
            "type" : [ "null", "File" ],
            "doc" : "GA4GH format, sources: clinvar, HGMD, COSMIC, GWASCatalog??? Should we use VCF files and not make this more complex????"
          } ]
        } ],
        "doc" : "Virtual Panels can be defined using EnsmbleIds, Transcripts, a BED File or a VCF File"
      }, {
        "name" : "otherFamilyHistory",
        "type" : [ "null", {
          "type" : "record",
          "name" : "OtherFamilyHistory",
          "doc" : "Family history for secondary findings\nTODO: define the enumerations + other. Currently from model catalogue EndocrineTumours  colorectal  BreastOvarian  HDOrStroke\nArrays of strings describing discrete family history phenotypes",
          "fields" : [ {
            "name" : "maternalFamilyHistory",
            "type" : [ "null", {
              "type" : "array",
              "items" : "string"
            } ]
          }, {
            "name" : "paternalFamilyHistory",
            "type" : [ "null", {
              "type" : "array",
              "items" : "string"
            } ]
          } ]
        } ],
        "doc" : "This is the family history as pertinent to assessing secondary findings.\n    It is paternal or maternal with reference to the proband.\n    TODO: It should be eventually added to the pedigree information as a second class of diseases but at present the data is not collected in that level of detail."
      } ]
    }
  }, {
    "name" : "analysisURI",
    "type" : "string"
  }, {
    "name" : "analysisVersion",
    "type" : "string"
  }, {
    "name" : "additionalInfo",
    "type" : [ "null", {
      "type" : "map",
      "values" : "string"
    } ],
    "doc" : "Additional information"
  } ]
}

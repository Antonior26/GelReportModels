{
  "type" : "record",
  "name" : "RareDisease",
  "namespace" : "Gel_BioInf_Models",
  "fields" : [ {
    "name" : "pedigree",
    "type" : {
      "type" : "record",
      "name" : "Pedigree",
      "doc" : "This is the concept of a family with associated phenotypes as present in the record RDParticipant",
      "fields" : [ {
        "name" : "gelFamilyId",
        "type" : "string",
        "doc" : "Family id which internally translate to a sample set"
      }, {
        "name" : "participants",
        "type" : {
          "type" : "array",
          "items" : {
            "type" : "record",
            "name" : "RDParticipant",
            "doc" : "This defines a RD Participant (demographics and pedigree information)",
            "fields" : [ {
              "name" : "pedigreeId",
              "type" : "int",
              "doc" : "Numbering used to refer to each member of the pedigree"
            }, {
              "name" : "gelId",
              "type" : [ "null", "string" ],
              "doc" : "gel internal identifier, only required when the participant belongs to the program"
            }, {
              "name" : "gelFamilyId",
              "type" : "string",
              "doc" : "Family id which internally translate to a sample set"
            }, {
              "name" : "sex",
              "type" : {
                "type" : "enum",
                "name" : "Sex",
                "doc" : "Sex",
                "symbols" : [ "male", "female", "undetermined" ]
              },
              "doc" : "Sex of the Participant"
            }, {
              "name" : "fatherId",
              "type" : [ "null", "string" ],
              "doc" : "Id of the parent, if unknown then no parent is referenced. Parents may need to be entered even if no data is known\n    about them in order to unambiguously reconstruct the pedigree."
            }, {
              "name" : "motherId",
              "type" : [ "null", "string" ]
            }, {
              "name" : "twinGroup",
              "type" : [ "null", "int" ],
              "doc" : "Each twin group is numbered, i.e. all members of a group of multiparous births receive the same number"
            }, {
              "name" : "monozygotic",
              "type" : [ "null", {
                "type" : "enum",
                "name" : "TernaryOption",
                "doc" : "This the define a yes/no/unknown case",
                "symbols" : [ "yes", "no", "unknown" ]
              } ],
              "doc" : "A property of the twinning group but should be entered for all members"
            }, {
              "name" : "adoptedStatus",
              "type" : {
                "type" : "enum",
                "name" : "AdoptedStatus",
                "doc" : "adoptedin means adopted into the family\nadoptedout means child belonged to the family and was adopted out",
                "symbols" : [ "not_adopted", "adoptedin", "adoptedout" ]
              },
              "doc" : "Adopted Status"
            }, {
              "name" : "lifeStatus",
              "type" : {
                "type" : "enum",
                "name" : "LifeStatus",
                "doc" : "Life Status",
                "symbols" : [ "alive", "aborted", "deceased", "unborn", "stillborn", "miscarriage" ]
              },
              "doc" : "Life Status"
            }, {
              "name" : "consanguineousParents",
              "type" : "TernaryOption",
              "doc" : "The parents of this participant has a consanguineous relationship"
            }, {
              "name" : "consanguineousPopulation",
              "type" : [ "null", "string" ],
              "doc" : "Offspring from a consanguineous population"
            }, {
              "name" : "affectionStatus",
              "type" : {
                "type" : "enum",
                "name" : "AffectionStatus",
                "doc" : "Affection Status",
                "symbols" : [ "unaffected", "affected", "unknown" ]
              },
              "doc" : "Affection Status"
            }, {
              "name" : "disorderList",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "Disorder",
                  "doc" : "This is quite GEL specific. This is the way is stored in ModelCatalogue and PanelApp.\nCurrently all specific disease titles are assigned to a disease subgroup so really only specificDisease needs to be\ncompleted but we add the others for generality",
                  "fields" : [ {
                    "name" : "diseaseGroup",
                    "type" : [ "null", "string" ],
                    "doc" : "This is Level2 Title for this disorder"
                  }, {
                    "name" : "diseaseSubGroup",
                    "type" : [ "null", "string" ],
                    "doc" : "This is Level3 Title for this disorder"
                  }, {
                    "name" : "specificDisease",
                    "type" : [ "null", "string" ],
                    "doc" : "This is Level4 Title for this disorder"
                  }, {
                    "name" : "ageOfOnset",
                    "type" : [ "null", "int" ],
                    "doc" : "Age of onset in months"
                  } ]
                }
              },
              "doc" : "Clinical Data (disorders). If the family member is unaffected as per affectionStatus then this list is empty"
            }, {
              "name" : "hpoTermList",
              "type" : {
                "type" : "array",
                "items" : {
                  "type" : "record",
                  "name" : "HpoTerm",
                  "doc" : "This defines an HPO term and its modifiers (possibly multiple)\nIf HPO term presence is unknown we don't have a entry on the list",
                  "fields" : [ {
                    "name" : "term",
                    "type" : "string",
                    "doc" : "Identifier of the HPO term"
                  }, {
                    "name" : "termPresence",
                    "type" : "boolean",
                    "doc" : "This is whether the term is present in the participant (default is null=unkown) true=term is present in participant,\n    false=term is not present"
                  }, {
                    "name" : "modifiers",
                    "type" : [ "null", {
                      "type" : "array",
                      "items" : "string"
                    } ],
                    "doc" : "Modifier associated with the HPO term"
                  }, {
                    "name" : "ageOfOnset",
                    "type" : [ "null", "int" ],
                    "doc" : "Age of onset in months"
                  } ]
                }
              },
              "doc" : "Clinical Data (HPO terms)"
            }, {
              "name" : "ancestries",
              "type" : {
                "type" : "record",
                "name" : "Ancestries",
                "fields" : [ {
                  "name" : "mothersEthnicOrigin",
                  "type" : [ "null", {
                    "type" : "enum",
                    "name" : "EthnicCategory",
                    "doc" : "This is the list of ethnics in ONS16",
                    "symbols" : [ "D", "E", "F", "G", "A", "B", "C", "L", "M", "N", "H", "J", "K", "P", "S", "R", "Z" ]
                  } ],
                  "doc" : "Mother's Ethnic Origin"
                }, {
                  "name" : "mothersOtherRelevantAncestry",
                  "type" : [ "null", "string" ],
                  "doc" : "Mother's Ethnic Origin Description"
                }, {
                  "name" : "fathersEthnicOrigin",
                  "type" : [ "null", "EthnicCategory" ],
                  "doc" : "Father's Ethnic Origin"
                }, {
                  "name" : "fathersOtherRelevantAncestry",
                  "type" : [ "null", "string" ],
                  "doc" : "Father's Ethnic Origin Description"
                }, {
                  "name" : "chiSquare1KGenomesPhase3Pop",
                  "type" : [ "null", {
                    "type" : "array",
                    "items" : {
                      "type" : "record",
                      "name" : "ChiSquare1KGenomesPhase3Pop",
                      "doc" : "Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations",
                      "fields" : [ {
                        "name" : "kGSuperPopCategory",
                        "type" : {
                          "type" : "enum",
                          "name" : "KGSuperPopCategory",
                          "doc" : "1K Population",
                          "symbols" : [ "AFR", "AMR", "EAS", "EUR", "SAS" ]
                        },
                        "doc" : "1K Super Population"
                      }, {
                        "name" : "kGPopCategory",
                        "type" : [ "null", {
                          "type" : "enum",
                          "name" : "KGPopCategory",
                          "doc" : "1K Super Population",
                          "symbols" : [ "ACB", "ASW", "BEB", "CDX", "CEU", "CHB", "CHS", "CLM", "ESN", "FIN", "GBR", "GIH", "GWD", "IBS", "ITU", "JPT", "KHV", "LWK", "MSL", "MXL", "PEL", "PJL", "PUR", "STU", "TSI", "YRI" ]
                        } ],
                        "doc" : "1K Population"
                      }, {
                        "name" : "chiSquare",
                        "type" : "float",
                        "doc" : "Chi-square test for goodness of fit of this sample to this 1000 Genomes Phase 3 population"
                      } ]
                    }
                  } ],
                  "doc" : "Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations"
                } ]
              },
              "doc" : "Participant's ancestries, defined as Mother's/Father's Ethnic Origin and Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations"
            }, {
              "name" : "dataModelCatalogueVersion",
              "type" : "string",
              "doc" : "Version of the Data Catalogue against which the information is being provided\n    The data catalogue version should internally keep track of the version for the HPO ontology",
              "default" : "v4.2"
            }, {
              "name" : "consentStatus",
              "type" : {
                "type" : "record",
                "name" : "ConsentStatus",
                "doc" : "Consent Status",
                "fields" : [ {
                  "name" : "programmeConsent",
                  "type" : "boolean",
                  "doc" : "Is this individual consented to the programme?\n    It could simple be a family member that is not consented but for whom affection status is known",
                  "default" : false
                }, {
                  "name" : "primaryFindingConsent",
                  "type" : "boolean",
                  "doc" : "Consent for feedback of primary findings?",
                  "default" : false
                }, {
                  "name" : "secondaryFindingConsent",
                  "type" : "boolean",
                  "doc" : "Consent for secondary finding lookup",
                  "default" : false
                }, {
                  "name" : "carrierStatusConsent",
                  "type" : "boolean",
                  "doc" : "Consent for carrier status check?",
                  "default" : false
                } ]
              },
              "doc" : "What has this participant consented to?\n    A participant that has been consented to the programme should also have sequence data associated with them; however\n    this needs to be programmatically checked"
            }, {
              "name" : "samples",
              "type" : [ "null", {
                "type" : "array",
                "items" : "string"
              } ],
              "doc" : "This is an array containing all the samples that belong to this individual, e.g [\"LP00002255_GA4\"]"
            }, {
              "name" : "additionalInformation",
              "type" : [ "null", {
                "type" : "map",
                "values" : "string"
              } ],
              "doc" : "We could add a map here to store additional information for example URIs to images, ECGs, etc\n    Null by default"
            } ]
          }
        }
      } ]
    }
  }, {
    "name" : "inbreedingCoefficientEstimates",
    "type" : [ "null", {
      "type" : "record",
      "name" : "File",
      "doc" : "This defines a file\nThis Record is defined by the sampleID and a URI\nCurrently SampleID can be a single String or an array of strings if multiple samples are associated with the same file",
      "fields" : [ {
        "name" : "SampleId",
        "type" : [ "null", "string", {
          "type" : "array",
          "items" : "string"
        } ],
        "doc" : "Unique ID(s) of the Sample, for example in a multisample vcf this would have an array of all the smaple ids"
      }, {
        "name" : "URIFile",
        "type" : "string",
        "doc" : "URI PATH"
      } ]
    } ]
  }, {
    "name" : "complexGeneticPhenomena",
    "type" : {
      "type" : "enum",
      "name" : "ComplexGeneticPhenomena",
      "symbols" : [ "mosaicism", "monosomy", "disomy", "uniparental_disomy", "trisomy", "other_aneuploidy" ]
    }
  }, {
    "name" : "modeOfInheritance",
    "type" : {
      "type" : "enum",
      "name" : "ModelOfInheritance",
      "doc" : "monoallelic_not_imprinted->MONOALLELIC, autosomal or pseudoautosomal, not imprinted\nmonoallelic_maternally_imprinted->MONOALLELIC, autosomal or pseudoautosomal, maternally imprinted (paternal allele expressed)\nmonoallelic_paternally_imprinted->MONOALLELIC, autosomal or pseudoautosomal, paternally imprinted (maternal allele expressed)\nmonoallelic->MONOALLELIC, autosomal or pseudoautosomal, imprinted status unknown\nbiallelic->BIALLELIC, autosomal or pseudoautosomal\nmonoallelic_and_biallelic->BOTH monoallelic and biallelic, autosomal or pseudoautosomal\nmonoallelic_and_more_severe_biallelic->BOTH monoallelic and biallelic, autosomal or pseudoautosomal (but BIALLELIC mutations cause a more SEVERE disease form), autosomal or pseudoautosomal\nxlinked_biallelic->X-LINKED: hemizygous mutation in males, biallelic mutations in females\nxlinked_monoallelic->X linked: hemizygous mutation in males, monoallelic mutations in females may cause disease (may be less severe, later onset than males)\nmitochondrial->MITOCHONDRIAL\nunknown->Unknown",
      "symbols" : [ "monoallelic_not_imprinted", "monoallelic_maternally_imprinted", "monoallelic_paternally_imprinted", "monoallelic", "xlinked_biallelic", "xlinked_monoallelic", "mitochondrial", "unknown" ]
    }
  }, {
    "name" : "virtualPanel",
    "type" : [ "null", {
      "type" : "record",
      "name" : "VirtualPanel",
      "doc" : "This record defines a gene panel.",
      "fields" : [ {
        "name" : "specificDiseaseTitle",
        "type" : "string"
      }, {
        "name" : "panelVersion",
        "type" : "string"
      }, {
        "name" : "ensemblVersion",
        "type" : "string"
      }, {
        "name" : "dataModelCatalogueVersion",
        "type" : "string",
        "doc" : "Version of the Data Catalogue against which the information is being provided\n    The data catalogue version should internally keep track of the version for the HPO ontology"
      }, {
        "name" : "geneIds",
        "type" : {
          "type" : "array",
          "items" : "string"
        },
        "doc" : "gene id from ensembl (version as per annotation file)"
      }, {
        "name" : "Transcripts",
        "type" : [ "null", {
          "type" : "array",
          "items" : "string"
        } ],
        "doc" : "transcript ids from ensembl"
      }, {
        "name" : "relevantRegions",
        "type" : [ "null", "File" ],
        "doc" : "BED format file"
      }, {
        "name" : "clinicalRelevantVariants",
        "type" : [ "null", "File" ],
        "doc" : "GA4GH format, sources: clinvar, HGMD, COSMIC, GWASCatalog??? Should we use VCF files and not make this more complex????"
      } ]
    } ],
    "doc" : "Virtual Panels can be defined using EnsmbleIds, Transcripts, a BED File or a VCF File"
  }, {
    "name" : "otherFamilyHistory",
    "type" : [ "null", {
      "type" : "record",
      "name" : "OtherFamilyHistory",
      "doc" : "Family history for secondary findings\nTODO: define the enumerations + other. Currently from model catalogue EndocrineTumours  colorectal  BreastOvarian  HDOrStroke\nArrays of strings describing discrete family history phenotypes",
      "fields" : [ {
        "name" : "maternalFamilyHistory",
        "type" : [ "null", {
          "type" : "array",
          "items" : "string"
        } ]
      }, {
        "name" : "paternalFamilyHistory",
        "type" : [ "null", {
          "type" : "array",
          "items" : "string"
        } ]
      } ]
    } ],
    "doc" : "This is the family history as pertinent to assessing secondary findings.\n    It is paternal or maternal with reference to the proband."
  } ]
}

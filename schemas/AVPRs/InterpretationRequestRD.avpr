{
  "protocol" : "InterpretationRequestRD",
  "namespace" : "Gel_BioInf_Models",
  "doc" : "This protocol defines the mechanism that GEL uses to trigger a clinical interpretation process from a third party\nThe record Report is the top level class. This includes clinical information + various version\nThe annotation provided by Genomics England is created using CellBase https://github.com/opencb/cellbase/wiki\nAll annotations are against Ensembl gene models",
  "types" : [ {
    "type" : "record",
    "name" : "File",
    "doc" : "This defines a file\nThis Record is defined by the sampleID and a URI\nCurrently SampleID can be a single String or an array of strings if multiple samples are associated with the same file",
    "fields" : [ {
      "name" : "SampleId",
      "type" : [ "null", "string", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "Unique ID(s) of the Sample, for example in a multisample vcf this would have an array of all the smaple ids"
    }, {
      "name" : "URIFile",
      "type" : "string",
      "doc" : "URI PATH"
    } ]
  }, {
    "type" : "record",
    "name" : "VirtualPanel",
    "doc" : "This record defines a gene panel.",
    "fields" : [ {
      "name" : "specificDiseaseTitle",
      "type" : "string"
    }, {
      "name" : "panelVersion",
      "type" : "string"
    }, {
      "name" : "ensemblVersion",
      "type" : "string"
    }, {
      "name" : "dataModelCatalogueVersion",
      "type" : "string",
      "doc" : "Version of the Data Catalogue against which the information is being provided\n    The data catalogue version should internally keep track of the version for the HPO ontology"
    }, {
      "name" : "geneIds",
      "type" : {
        "type" : "array",
        "items" : "string"
      },
      "doc" : "gene id from ensembl (version as per annotation file)"
    }, {
      "name" : "Transcripts",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "transcript ids from ensembl"
    }, {
      "name" : "relevantRegions",
      "type" : [ "null", "File" ],
      "doc" : "BED format file"
    }, {
      "name" : "clinicalRelevantVariants",
      "type" : [ "null", "File" ],
      "doc" : "GA4GH format, sources: clinvar, HGMD, COSMIC, GWASCatalog??? Should we use VCF files and not make this more complex????"
    } ]
  }, {
    "type" : "record",
    "name" : "OtherFamilyHistory",
    "doc" : "Family history for secondary findings\nTODO: define the enumerations + other. Currently from model catalogue EndocrineTumours  colorectal  BreastOvarian  HDOrStroke\nArrays of strings describing discrete family history phenotypes",
    "fields" : [ {
      "name" : "maternalFamilyHistory",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ]
    }, {
      "name" : "paternalFamilyHistory",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ]
    } ]
  }, {
    "type" : "enum",
    "name" : "Sex",
    "doc" : "Demographics",
    "symbols" : [ "male", "female", "undetermined" ]
  }, {
    "type" : "enum",
    "name" : "TernaryOption",
    "symbols" : [ "yes", "no", "unknown" ]
  }, {
    "type" : "enum",
    "name" : "EthnicCategory",
    "doc" : "This is the list of ethnics in ONS16",
    "symbols" : [ "D", "E", "F", "G", "A", "B", "C", "L", "M", "N", "H", "J", "K", "P", "S", "R", "Z" ]
  }, {
    "type" : "enum",
    "name" : "KGPopCategory",
    "symbols" : [ "ACB", "ASW", "BEB", "CDX", "CEU", "CHB", "CHS", "CLM", "ESN", "FIN", "GBR", "GIH", "GWD", "IBS", "ITU", "JPT", "KHV", "LWK", "MSL", "MXL", "PEL", "PJL", "PUR", "STU", "TSI", "YRI" ]
  }, {
    "type" : "enum",
    "name" : "KGSuperPopCategory",
    "symbols" : [ "AFR", "AMR", "EAS", "EUR", "SAS" ]
  }, {
    "type" : "record",
    "name" : "KGenomesPhase3Pop",
    "fields" : [ {
      "name" : "kGSuperPopCategory",
      "type" : "KGSuperPopCategory"
    }, {
      "name" : "kGPopCategory",
      "type" : [ "null", "KGPopCategory" ]
    } ]
  }, {
    "type" : "record",
    "name" : "Ancestries",
    "fields" : [ {
      "name" : "mothersEthnicOrigin",
      "type" : [ "null", "EthnicCategory" ]
    }, {
      "name" : "mothersOtherRelevantAncestry",
      "type" : [ "null", "string" ]
    }, {
      "name" : "fathersEthnicOrigin",
      "type" : [ "null", "EthnicCategory" ]
    }, {
      "name" : "fathersOtherRelevantAncestry",
      "type" : [ "null", "string" ]
    }, {
      "name" : "kGenomesPhase3Pop",
      "type" : [ "null", {
        "type" : "array",
        "items" : "KGenomesPhase3Pop"
      } ]
    } ]
  }, {
    "type" : "record",
    "name" : "ConsentStatus",
    "doc" : "Consent Status",
    "fields" : [ {
      "name" : "programmeConsent",
      "type" : "boolean",
      "doc" : "Is this individual consented to the programme?\n    It could simple be a family member that is not consented but for whom affection status is known\n    False by default! needs to be explicitly changed",
      "default" : false
    }, {
      "name" : "primaryFindingConsent",
      "type" : "boolean",
      "doc" : "Consent for feedback of primary findings?\n    False by default",
      "default" : false
    }, {
      "name" : "secondaryFindingConsent",
      "type" : "boolean",
      "doc" : "Consent for secondary finding lookup\n    False by default",
      "default" : false
    }, {
      "name" : "carrierStatusConsent",
      "type" : "boolean",
      "doc" : "Consent for carrier status check?\n    False by default",
      "default" : false
    } ]
  }, {
    "type" : "record",
    "name" : "Disorder",
    "doc" : "This is quite GEL specific. This is the way is stored in ModelCatalogue and PanelApp.\nCurrently all specific disease titles are assigned to a disease subgroup so really only specificDisease needs to be\ncompleted but we add the others for generality",
    "fields" : [ {
      "name" : "diseaseGroup",
      "type" : [ "null", "string" ],
      "doc" : "This is Level2 Title for this disorder"
    }, {
      "name" : "diseaseSubGroup",
      "type" : [ "null", "string" ],
      "doc" : "This is Level3 Title for this disorder"
    }, {
      "name" : "specificDisease",
      "type" : [ "null", "string" ],
      "doc" : "This is Level4 Title for this disorder"
    }, {
      "name" : "ageOfOnset",
      "type" : [ "null", "int" ],
      "doc" : "Age of onset in months"
    } ]
  }, {
    "type" : "record",
    "name" : "HpoTerm",
    "doc" : "This defines an HPO term and its modifiers (possibly multiple)\nIf HPO term presence is unknown we don't have a entry on the list",
    "fields" : [ {
      "name" : "term",
      "type" : "string",
      "doc" : "Identifier of the HPO term"
    }, {
      "name" : "termPresence",
      "type" : "boolean",
      "doc" : "This is whether the term is present in the participant (default is null=unkown) true=term is present in participant,\n    false=term is not present"
    }, {
      "name" : "modifiers",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "Modifier associated with the HPO term"
    }, {
      "name" : "ageOfOnset",
      "type" : [ "null", "int" ],
      "doc" : "Age of onset in months"
    } ]
  }, {
    "type" : "enum",
    "name" : "AffectionStatus",
    "doc" : "Definitions of enumeration used in RDParticipant",
    "symbols" : [ "unaffected", "affected", "unknown" ]
  }, {
    "type" : "enum",
    "name" : "LifeStatus",
    "symbols" : [ "alive", "aborted", "deceased", "unborn", "stillborn", "miscarriage" ]
  }, {
    "type" : "enum",
    "name" : "AdoptedStatus",
    "doc" : "Default is not_adopted\nadoptedin means adopted into the family\nadoptedout means child belonged to the family and was adopted out",
    "symbols" : [ "not_adopted", "adoptedin", "adoptedout" ]
  }, {
    "type" : "record",
    "name" : "RDParticipant",
    "doc" : "This defines a RD Participant (demographics and pedigree information)",
    "fields" : [ {
      "name" : "pedigreeId",
      "type" : "int"
    }, {
      "name" : "gelId",
      "type" : [ "null", "string" ]
    }, {
      "name" : "gelFamilyId",
      "type" : "string",
      "doc" : "Family id which internally translate to a sample set"
    }, {
      "name" : "sex",
      "type" : "Sex"
    }, {
      "name" : "fatherId",
      "type" : [ "null", "string" ],
      "doc" : "Id of the parent, if unknown then no parent is referenced. Parents may need to be entered even if no data is known\n    about them in order to unambiguously reconstruct the pedigree."
    }, {
      "name" : "motherId",
      "type" : [ "null", "string" ]
    }, {
      "name" : "twinGroup",
      "type" : [ "null", "int" ],
      "doc" : "Each twin group is numbered, i.e. all members of a group of multiparous births receive the same number"
    }, {
      "name" : "monozygotic",
      "type" : [ "null", "TernaryOption" ]
    }, {
      "name" : "adoptedStatus",
      "type" : "AdoptedStatus"
    }, {
      "name" : "lifeStatus",
      "type" : "LifeStatus"
    }, {
      "name" : "consanguineousParents",
      "type" : "TernaryOption"
    }, {
      "name" : "consanguineousPopulation",
      "type" : [ "null", "string" ],
      "doc" : "Offspring from a consanguineous population"
    }, {
      "name" : "affectionStatus",
      "type" : "AffectionStatus"
    }, {
      "name" : "disorderList",
      "type" : {
        "type" : "array",
        "items" : "Disorder"
      },
      "doc" : "Clinical Data (disorders). If the family member is unaffected as per affectionStatus then this list is empty"
    }, {
      "name" : "hpoTermList",
      "type" : {
        "type" : "array",
        "items" : "HpoTerm"
      },
      "doc" : "Clinical Data (HPO terms)"
    }, {
      "name" : "dataModelCatalogueVersion",
      "type" : "string",
      "doc" : "Version of the Data Catalogue against which the information is being provided\n    The data catalogue version should internally keep track of the version for the HPO ontology",
      "default" : "v4.2"
    }, {
      "name" : "consentStatus",
      "type" : "ConsentStatus",
      "doc" : "What has this participant consented to?\n    A participant that has been consented to the programme should also have sequence data associated with them; however\n    this needs to be programmatically checked"
    }, {
      "name" : "samples",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "This is an array containing all the samples that belong to this individual, e.g [\"LP00002255_GA4\"]"
    }, {
      "name" : "additionalInformation",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "We could add a map here to store additional information for example URIs to images, ECGs, etc\n    Null by default"
    } ]
  }, {
    "type" : "record",
    "name" : "Pedigree",
    "doc" : "This is the concept of a family with associated phenotypes as present in the record RDParticipant",
    "fields" : [ {
      "name" : "gelFamilyId",
      "type" : "string",
      "doc" : "Family id which internally translate to a sample set"
    }, {
      "name" : "participants",
      "type" : {
        "type" : "array",
        "items" : "RDParticipant"
      }
    } ]
  }, {
    "type" : "enum",
    "name" : "ModelOfInheritance",
    "doc" : "monoallelic_not_imprinted->MONOALLELIC, autosomal or pseudoautosomal, not imprinted\nmonoallelic_maternally_imprinted->MONOALLELIC, autosomal or pseudoautosomal, maternally imprinted (paternal allele expressed)\nmonoallelic_paternally_imprinted->MONOALLELIC, autosomal or pseudoautosomal, paternally imprinted (maternal allele expressed)\nmonoallelic->MONOALLELIC, autosomal or pseudoautosomal, imprinted status unknown\nbiallelic->BIALLELIC, autosomal or pseudoautosomal\nmonoallelic_and_biallelic->BOTH monoallelic and biallelic, autosomal or pseudoautosomal\nmonoallelic_and_more_severe_biallelic->BOTH monoallelic and biallelic, autosomal or pseudoautosomal (but BIALLELIC mutations cause a more SEVERE disease form), autosomal or pseudoautosomal\nxlinked_biallelic->X-LINKED: hemizygous mutation in males, biallelic mutations in females\nxlinked_monoallelic->X linked: hemizygous mutation in males, monoallelic mutations in females may cause disease (may be less severe, later onset than males)\nmitochondrial->MITOCHONDRIAL\nunknown->Unknown",
    "symbols" : [ "monoallelic_not_imprinted", "monoallelic_maternally_imprinted", "monoallelic_paternally_imprinted", "monoallelic", "xlinked_biallelic", "xlinked_monoallelic", "mitochondrial", "unknown" ]
  }, {
    "type" : "enum",
    "name" : "ComplexGeneticPhenomena",
    "symbols" : [ "mosaicism", "monosomy", "disomy", "uniparental_disomy", "trisomy", "other_aneuploidy" ]
  }, {
    "type" : "record",
    "name" : "RareDisease",
    "fields" : [ {
      "name" : "pedigree",
      "type" : "Pedigree"
    }, {
      "name" : "inbreedingCoefficientEstimates",
      "type" : [ "null", "File" ]
    }, {
      "name" : "ancestries",
      "type" : "Ancestries"
    }, {
      "name" : "complexGeneticPhenomena",
      "type" : "ComplexGeneticPhenomena"
    }, {
      "name" : "modeOfInheritance",
      "type" : "ModelOfInheritance"
    }, {
      "name" : "virtualPanel",
      "type" : [ "null", "VirtualPanel" ],
      "doc" : "Virtual Panels can be defined using EnsmbleIds, Transcripts, a BED File or a VCF File"
    }, {
      "name" : "otherFamilyHistory",
      "type" : [ "null", "OtherFamilyHistory" ],
      "doc" : "This is the family history as pertinent to assessing secondary findings.\n    It is paternal or maternal with reference to the proband."
    } ]
  }, {
    "type" : "record",
    "name" : "RDInterpretationRequest",
    "doc" : "This record represents basic information for this report",
    "fields" : [ {
      "name" : "reportRequestId",
      "type" : "string",
      "doc" : "Unique id for this report"
    }, {
      "name" : "genomeAssemblyVersion",
      "type" : "string"
    }, {
      "name" : "reportVersion",
      "type" : "int",
      "doc" : "Version of this report"
    }, {
      "name" : "interpretGenome",
      "type" : "boolean",
      "doc" : "Simply load data to system or also provide interpretation?",
      "default" : false
    }, {
      "name" : "workspace",
      "type" : {
        "type" : "array",
        "items" : "string"
      }
    }, {
      "name" : "BAMs",
      "type" : {
        "type" : "array",
        "items" : "File"
      },
      "doc" : "BAMs Files"
    }, {
      "name" : "gVCFs",
      "type" : {
        "type" : "array",
        "items" : "File"
      },
      "doc" : "gVCFs Files where SNVs and INDELs are represented"
    }, {
      "name" : "VCFs",
      "type" : {
        "type" : "array",
        "items" : "File"
      },
      "doc" : "VCFs Files where SVs and CNVs are represented"
    }, {
      "name" : "BigWigs",
      "type" : [ "null", {
        "type" : "array",
        "items" : "File"
      } ],
      "doc" : "BigWig Files"
    }, {
      "name" : "annotationFile",
      "type" : [ "null", "File" ],
      "doc" : "This will be the output file from Cellbase + version used"
    }, {
      "name" : "rareDisease",
      "type" : "RareDisease"
    }, {
      "name" : "analysisReturnURI",
      "type" : "string"
    }, {
      "name" : "analysisVersion",
      "type" : "string",
      "doc" : "In the event that the provider has multiple versions of their system and an analysis will need to be provided against\n    a particular version, then that version goes here.",
      "default" : "1"
    }, {
      "name" : "additionalInfo",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "Additional information"
    } ]
  } ],
  "messages" : { }
}